// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Stack Snapshot 1`] = `
Object {
  "Outputs": Object {
    "Exportpfmserviceecrrepository": Object {
      "Export": Object {
        "Name": "pfm-service-ecr-repository",
      },
      "Value": Object {
        "Ref": "PfmServiceEcrRepository23177656",
      },
    },
    "Exportpfmserviceecrrepositoryarn": Object {
      "Export": Object {
        "Name": "pfm-service-ecr-repository-arn",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "PfmServiceEcrRepository23177656",
          "Arn",
        ],
      },
    },
    "Exportpfmserviceecrrepositoryuri": Object {
      "Export": Object {
        "Name": "pfm-service-ecr-repository-uri",
      },
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            Object {
              "Fn::Select": Array [
                4,
                Object {
                  "Fn::Split": Array [
                    ":",
                    Object {
                      "Fn::GetAtt": Array [
                        "PfmServiceEcrRepository23177656",
                        "Arn",
                      ],
                    },
                  ],
                },
              ],
            },
            ".dkr.ecr.",
            Object {
              "Fn::Select": Array [
                3,
                Object {
                  "Fn::Split": Array [
                    ":",
                    Object {
                      "Fn::GetAtt": Array [
                        "PfmServiceEcrRepository23177656",
                        "Arn",
                      ],
                    },
                  ],
                },
              ],
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "PfmServiceEcrRepository23177656",
            },
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "branch": Object {
      "Default": "master",
      "Description": "Github/Codecommit source branch",
      "Type": "String",
    },
    "bucket": Object {
      "Default": "",
      "Description": "s3 source bucket name",
      "Type": "String",
    },
    "bucketKey": Object {
      "Default": "",
      "Description": "s3 source bucket key",
      "Type": "String",
    },
    "githubOrg": Object {
      "Default": "mmi-holdings-ces",
      "Description": "Github organisation name",
      "Type": "String",
    },
    "pomFile": Object {
      "Default": "pom.xml",
      "Description": "pom.xml file path",
      "Type": "String",
    },
    "propertiesFile": Object {
      "Description": "pom.properties file path",
      "Type": "String",
    },
    "replicas": Object {
      "Default": 1,
      "Description": "K8s deployment replicas, defaults to 1",
      "Type": "Number",
    },
    "sourceProvider": Object {
      "AllowedValues": Array [
        "github",
        "codecommit",
        "s3",
      ],
      "Default": "github",
      "Description": "Pipeline source provider",
      "Type": "String",
    },
  },
  "Resources": Object {
    "ArtifactsBucket2AAC5544": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "ArtifactsBucketAutoDeleteObjectsCustomResource0E3B4320": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ArtifactsBucketPolicy852CB646",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "ArtifactsBucket2AAC5544",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "ArtifactsBucketPolicy852CB646": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "ArtifactsBucket2AAC5544",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ArtifactsBucket2AAC5544",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "ArtifactsBucket2AAC5544",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "cdk-hnb659fds-assets-23456789111-af-south-1",
          "S3Key": "bdb08b9984816ecf43301a0c6d8913e270ee2448940b6b95e430dd222a4d90be.zip",
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "ArtifactsBucket2AAC5544",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DEVPfmServiceEksDeployRolePolicy309AEFFA": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::23456789111:role/eks-deploy",
            },
            Object {
              "Action": "eks:DescribeCluster",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "ec2:CreateNetworkInterfacePermission",
              "Condition": Object {
                "StringEquals": Object {
                  "ec2:AuthorizedService": "codebuild.amazonaws.com",
                  "ec2:Subnet": Array [
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          Object {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":subnet/p-12345",
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          Object {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":subnet/p-67890",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ec2:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":network-interface/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:af-south-1:23456789111:log-group:/aws/codebuild/",
                      Object {
                        "Ref": "PfmServiceDeploydevCodeBuildProjectC0D2A586",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:af-south-1:23456789111:log-group:/aws/codebuild/",
                      Object {
                        "Ref": "PfmServiceDeploydevCodeBuildProjectC0D2A586",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:af-south-1:23456789111:report-group/",
                    Object {
                      "Ref": "PfmServiceDeploydevCodeBuildProjectC0D2A586",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ArtifactsBucket2AAC5544",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "ArtifactsBucket2AAC5544",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DEVPfmServiceEksDeployRolePolicy309AEFFA",
        "Roles": Array [
          "eks-deploy",
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PREPRODPfmServiceEksDeployRolePolicyEAC8849E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::23456789111:role/eks-deploy",
            },
            Object {
              "Action": "eks:DescribeCluster",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "ec2:CreateNetworkInterfacePermission",
              "Condition": Object {
                "StringEquals": Object {
                  "ec2:AuthorizedService": "codebuild.amazonaws.com",
                  "ec2:Subnet": Array [
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          Object {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":subnet/p-12345",
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          Object {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":subnet/p-67890",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ec2:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":network-interface/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:af-south-1:23456789111:log-group:/aws/codebuild/",
                      Object {
                        "Ref": "PfmServiceDeploypreprodCodeBuildProject1F9A10DE",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:af-south-1:23456789111:log-group:/aws/codebuild/",
                      Object {
                        "Ref": "PfmServiceDeploypreprodCodeBuildProject1F9A10DE",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:af-south-1:23456789111:report-group/",
                    Object {
                      "Ref": "PfmServiceDeploypreprodCodeBuildProject1F9A10DE",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ArtifactsBucket2AAC5544",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "ArtifactsBucket2AAC5544",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PREPRODPfmServiceEksDeployRolePolicyEAC8849E",
        "Roles": Array [
          "eks-deploy",
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PfmServiceDeploydevCodeBuildProjectC0D2A586": Object {
      "DependsOn": Array [
        "PfmServiceDeploydevCodeBuildProjectPolicyDocument51EAADC1",
      ],
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:3.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              "pfm-service-",
              Object {
                "Ref": "branch",
              },
              "-deploy-dev",
            ],
          ],
        },
        "ServiceRole": "arn:aws:iam::23456789111:role/eks-deploy",
        "Source": Object {
          "BuildSpec": Object {
            "Fn::Join": Array [
              "",
              Array [
                "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"echo \\\\\\"Installing Kubectl v1.15.0 in $PWD/bin\\\\\\"\\",
        \\"mkdir -p bin\\",
        \\"curl -L https://storage.googleapis.com/kubernetes-release/release/v1.15.0/bin/linux/amd64/kubectl -o bin/kubectl\\",
        \\"chmod +x bin/kubectl\\",
        \\"echo \\\\\\"Installing Yq v4.17.2 in $PWD/bin\\\\\\"\\",
        \\"mkdir -p bin\\",
        \\"curl -L https://github.com/mikefarah/yq/releases/download/v4.17.2/yq_linux_amd64 -o bin/yq\\",
        \\"chmod +x bin/yq\\",
        \\"chmod +x bin/yq --version\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"export VERSION=$(cat $CODEBUILD_SRC_DIR_Artifact_Build_Docker_Build/VERSION)\\",
        \\"echo resolved version $VERSION\\",
        \\"mkdir -p .k8s\\",
        \\"aws s3 sync s3://momentum-money-k8s-templates .k8s/\\",
        \\"aws eks update-kubeconfig --name non-prod --region af-south-1 --role-arn arn:aws:iam::23456789111:role/eks-deploy\\",
        \\"bin/yq e -i '             .metadata.name = \\\\\\"pfm-service\\\\\\" |             .metadata.labels.project = \\\\\\"pfm-service\\\\\\" |             .metadata.labels.app = \\\\\\"pfm-service\\\\\\" |             .spec.replicas = ",
                Object {
                  "Ref": "replicas",
                },
                " |             .spec.selector.matchLabels[\\\\\\"app.kubernetes.io/instance\\\\\\"] = \\\\\\"pfm-service\\\\\\" |             .spec.template.metadata.labels[\\\\\\"app.kubernetes.io/name\\\\\\"] = \\\\\\"pfm-service\\\\\\" |             .spec.template.metadata.labels[\\\\\\"app.kubernetes.io/instance\\\\\\"] = \\\\\\"pfm-service\\\\\\" |             .spec.template.metadata.labels[\\\\\\"app.kubernetes.io/version\\\\\\"] = strenv(VERSION)+\\\\\\"-SNAPSHOT\\\\\\" |             .spec.template.spec.containers[0].name = \\\\\\"pfm-service\\\\\\" |             .spec.template.spec.containers[0].env.[0].value = \\\\\\"dev\\\\\\" |             .spec.template.spec.containers[0].readinessProbe.httpGet.path = \\\\\\"/pfm-service\\\\\\" |             .spec.template.spec.containers[0].livenessProbe.httpGet.path = \\\\\\"/pfm-service\\\\\\" |             .spec.template.spec.containers[0].image = \\\\\\"23456789111.dkr.ecr.eu-west-1.amazonaws.com/pfm-service:\\\\\\"+strenv(VERSION)+\\\\\\"-SNAPSHOT\\\\\\"             ' .k8s/deployment.yml\\",
        \\"bin/yq e -i '             .metadata.name = \\\\\\"pfm-service-service\\\\\\" |             .metadata.labels.project = \\\\\\"pfm-service\\\\\\" |             .metadata.labels.app = \\\\\\"pfm-service\\\\\\" |             .metadata.labels.[\\\\\\"target-deployment\\\\\\"] = \\\\\\"pfm-service\\\\\\" |             .spec.selector[\\\\\\"app.kubernetes.io/instance\\\\\\"] = \\\\\\"pfm-service\\\\\\"             ' .k8s/svc-headless.yml\\",
        \\"bin/yq e -i '             .metadata.name = \\\\\\"pfm-service-service-hl\\\\\\" |             .metadata.labels.project = \\\\\\"pfm-service\\\\\\" |             .metadata.labels.app = \\\\\\"pfm-service\\\\\\" |             .metadata.labels.[\\\\\\"target-deployment\\\\\\"] = \\\\\\"pfm-service\\\\\\" |             .spec.selector[\\\\\\"app.kubernetes.io/instance\\\\\\"] = \\\\\\"pfm-service\\\\\\"             ' .k8s/svc.yml\\",
        \\"kubectl apply --namespace=dev -f .k8s/\\"
      ]
    }
  },
  \\"cache\\": {
    \\"paths\\": [
      \\"/root/.m2/**/*\\"
    ]
  },
  \\"artifacts\\": {
    \\"files\\": [
      \\".k8s/*\\"
    ]
  }
}",
              ],
            ],
          },
          "Type": "CODEPIPELINE",
        },
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "PfmServiceDeploydevCodeBuildProjectSecurityGroup9E791332",
                "GroupId",
              ],
            },
          ],
          "Subnets": Array [
            "p-12345",
            "p-67890",
          ],
          "VpcId": "vpc-12345",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "PfmServiceDeploydevCodeBuildProjectPolicyDocument51EAADC1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:CreateNetworkInterface",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DeleteNetworkInterface",
                "ec2:DescribeSubnets",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeVpcs",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PfmServiceDeploydevCodeBuildProjectPolicyDocument51EAADC1",
        "Roles": Array [
          "eks-deploy",
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PfmServiceDeploydevCodeBuildProjectSecurityGroup9E791332": Object {
      "Properties": Object {
        "GroupDescription": "Automatic generated security group for CodeBuild PfmServicePfmServiceDeploydevCodeBuildProjectFA1F8761",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": "vpc-12345",
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "PfmServiceDeploypreprodCodeBuildProject1F9A10DE": Object {
      "DependsOn": Array [
        "PfmServiceDeploypreprodCodeBuildProjectPolicyDocumentA85F5501",
      ],
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:3.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              "pfm-service-",
              Object {
                "Ref": "branch",
              },
              "-deploy-preprod",
            ],
          ],
        },
        "ServiceRole": "arn:aws:iam::23456789111:role/eks-deploy",
        "Source": Object {
          "BuildSpec": Object {
            "Fn::Join": Array [
              "",
              Array [
                "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"echo \\\\\\"Installing Kubectl v1.15.0 in $PWD/bin\\\\\\"\\",
        \\"mkdir -p bin\\",
        \\"curl -L https://storage.googleapis.com/kubernetes-release/release/v1.15.0/bin/linux/amd64/kubectl -o bin/kubectl\\",
        \\"chmod +x bin/kubectl\\",
        \\"echo \\\\\\"Installing Yq v4.17.2 in $PWD/bin\\\\\\"\\",
        \\"mkdir -p bin\\",
        \\"curl -L https://github.com/mikefarah/yq/releases/download/v4.17.2/yq_linux_amd64 -o bin/yq\\",
        \\"chmod +x bin/yq\\",
        \\"chmod +x bin/yq --version\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"export VERSION=$(cat $CODEBUILD_SRC_DIR_Artifact_Build_Docker_Build/VERSION)\\",
        \\"echo resolved version $VERSION\\",
        \\"mkdir -p .k8s\\",
        \\"aws s3 sync s3://momentum-money-k8s-templates .k8s/\\",
        \\"aws eks update-kubeconfig --name non-prod --region af-south-1 --role-arn arn:aws:iam::23456789111:role/eks-deploy\\",
        \\"bin/yq e -i '             .metadata.name = \\\\\\"pfm-service\\\\\\" |             .metadata.labels.project = \\\\\\"pfm-service\\\\\\" |             .metadata.labels.app = \\\\\\"pfm-service\\\\\\" |             .spec.replicas = ",
                Object {
                  "Ref": "replicas",
                },
                " |             .spec.selector.matchLabels[\\\\\\"app.kubernetes.io/instance\\\\\\"] = \\\\\\"pfm-service\\\\\\" |             .spec.template.metadata.labels[\\\\\\"app.kubernetes.io/name\\\\\\"] = \\\\\\"pfm-service\\\\\\" |             .spec.template.metadata.labels[\\\\\\"app.kubernetes.io/instance\\\\\\"] = \\\\\\"pfm-service\\\\\\" |             .spec.template.metadata.labels[\\\\\\"app.kubernetes.io/version\\\\\\"] = strenv(VERSION) |             .spec.template.spec.containers[0].name = \\\\\\"pfm-service\\\\\\" |             .spec.template.spec.containers[0].env.[0].value = \\\\\\"preprod\\\\\\" |             .spec.template.spec.containers[0].readinessProbe.httpGet.path = \\\\\\"/pfm-service\\\\\\" |             .spec.template.spec.containers[0].livenessProbe.httpGet.path = \\\\\\"/pfm-service\\\\\\" |             .spec.template.spec.containers[0].image = \\\\\\"23456789111.dkr.ecr.eu-west-1.amazonaws.com/pfm-service:\\\\\\"+strenv(VERSION)             ' .k8s/deployment.yml\\",
        \\"bin/yq e -i '             .metadata.name = \\\\\\"pfm-service-service\\\\\\" |             .metadata.labels.project = \\\\\\"pfm-service\\\\\\" |             .metadata.labels.app = \\\\\\"pfm-service\\\\\\" |             .metadata.labels.[\\\\\\"target-deployment\\\\\\"] = \\\\\\"pfm-service\\\\\\" |             .spec.selector[\\\\\\"app.kubernetes.io/instance\\\\\\"] = \\\\\\"pfm-service\\\\\\"             ' .k8s/svc-headless.yml\\",
        \\"bin/yq e -i '             .metadata.name = \\\\\\"pfm-service-service-hl\\\\\\" |             .metadata.labels.project = \\\\\\"pfm-service\\\\\\" |             .metadata.labels.app = \\\\\\"pfm-service\\\\\\" |             .metadata.labels.[\\\\\\"target-deployment\\\\\\"] = \\\\\\"pfm-service\\\\\\" |             .spec.selector[\\\\\\"app.kubernetes.io/instance\\\\\\"] = \\\\\\"pfm-service\\\\\\"             ' .k8s/svc.yml\\",
        \\"kubectl apply --namespace=preprod -f .k8s/\\"
      ]
    }
  },
  \\"cache\\": {
    \\"paths\\": [
      \\"/root/.m2/**/*\\"
    ]
  },
  \\"artifacts\\": {
    \\"files\\": [
      \\".k8s/*\\"
    ]
  }
}",
              ],
            ],
          },
          "Type": "CODEPIPELINE",
        },
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "PfmServiceDeploypreprodCodeBuildProjectSecurityGroup14223BB4",
                "GroupId",
              ],
            },
          ],
          "Subnets": Array [
            "p-12345",
            "p-67890",
          ],
          "VpcId": "vpc-12345",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "PfmServiceDeploypreprodCodeBuildProjectPolicyDocumentA85F5501": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:CreateNetworkInterface",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DeleteNetworkInterface",
                "ec2:DescribeSubnets",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeVpcs",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PfmServiceDeploypreprodCodeBuildProjectPolicyDocumentA85F5501",
        "Roles": Array [
          "eks-deploy",
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PfmServiceDeploypreprodCodeBuildProjectSecurityGroup14223BB4": Object {
      "Properties": Object {
        "GroupDescription": "Automatic generated security group for CodeBuild PfmServicePfmServiceDeploypreprodCodeBuildProject8DEA7510",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": "vpc-12345",
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "PfmServiceEcrRepository23177656": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ImageTagMutability": "IMMUTABLE",
        "LifecyclePolicy": Object {
          "LifecyclePolicyText": "{\\"rules\\":[{\\"rulePriority\\":1,\\"selection\\":{\\"tagStatus\\":\\"tagged\\",\\"tagPrefixList\\":[\\"SNAPSHOT\\"],\\"countType\\":\\"imageCountMoreThan\\",\\"countNumber\\":40},\\"action\\":{\\"type\\":\\"expire\\"}},{\\"rulePriority\\":2,\\"selection\\":{\\"tagStatus\\":\\"any\\",\\"countType\\":\\"imageCountMoreThan\\",\\"countNumber\\":9999},\\"action\\":{\\"type\\":\\"expire\\"}}]}",
        },
        "RepositoryName": "pfm-service",
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Delete",
    },
    "PfmServiceMavenDockerCodeBuildProjectFBEEFCC2": Object {
      "DependsOn": Array [
        "PfmServiceMavenDockerCodeBuildProjectPolicyDocument63658B0B",
      ],
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:3.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              "pfm-service-",
              Object {
                "Ref": "branch",
              },
              "-build",
            ],
          ],
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "pfmserviceMavenDockerBuildRole12444B07",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": Object {
            "Fn::Join": Array [
              "",
              Array [
                "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"runtime-versions\\": {
        \\"java\\": \\"openjdk8\\",
        \\"docker\\": 18
      }
    },
    \\"build\\": {
      \\"commands\\": [
        \\"java -version\\",
        \\"mvn -version\\",
        \\"mkdir -p ~/.m2\\",
        \\"export NEXUS_REPOSITORY=http://nexus-ces.mmih.biz\\",
        \\"export NEXUS_USERNAME=$(aws ssm get-parameter --name \\\\\\"/mmi/nexus/username\\\\\\" --region af-south-1 --output json | jq -r '.[].Value')\\",
        \\"export NEXUS_PASSWORD=$(aws ssm get-parameter --name \\\\\\"/mmi/nexus/password\\\\\\" --with-decryption --region af-south-1 --output json | jq -r '.[].Value')\\",
        \\"echo \\\\\\" \\\\n<settings>\\\\n  <servers>\\\\n    <server>\\\\n      <id>nexus</id>\\\\n      <username>$NEXUS_USERNAME</username>\\\\n      <password>$NEXUS_PASSWORD</password>\\\\n    </server>\\\\n    <server>\\\\n      <id>momentum</id>\\\\n      <username>$NEXUS_USERNAME</username>\\\\n      <password>$NEXUS_PASSWORD</password>\\\\n    </server>\\\\n    <server>\\\\n      <id>nexus-momentum-central</id>\\\\n      <username>$NEXUS_USERNAME</username>\\\\n      <password>$NEXUS_PASSWORD</password>\\\\n    </server>\\\\n    <server>\\\\n      <id>nexus-momentum-thirdparty</id>\\\\n      <username>$NEXUS_USERNAME</username>\\\\n      <password>$NEXUS_PASSWORD</password>\\\\n    </server>\\\\n    <server>\\\\n      <id>nexus-momentum-releases</id>\\\\n      <username>$NEXUS_USERNAME</username>\\\\n      <password>$NEXUS_PASSWORD</password>\\\\n    </server>\\\\n    <server>\\\\n      <id>nexus-momentum-snapshots</id>\\\\n      <username>$NEXUS_USERNAME</username>\\\\n      <password>$NEXUS_PASSWORD</password>\\\\n    </server>\\\\n  </servers>\\\\n\\\\n  <profiles>\\\\n    <profile>\\\\n        <id>nexus</id>\\\\n        <repositories>\\\\n            <repository>\\\\n              <id>maven-public</id>\\\\n              <url>$NEXUS_REPOSITORY/repository/maven-public</url>\\\\n              <releases><enabled>true</enabled></releases>\\\\n              <snapshots><enabled>true</enabled></snapshots>\\\\n            </repository>\\\\n        </repositories>\\\\n        <pluginRepositories>\\\\n            <pluginRepository>\\\\n                <id>maven-public</id>\\\\n                <url>$NEXUS_REPOSITORY/repository/maven-public</url>\\\\n                <releases><enabled>true</enabled></releases>\\\\n                <snapshots><enabled>true</enabled></snapshots>\\\\n            </pluginRepository>\\\\n        </pluginRepositories>\\\\n    </profile>\\\\n  </profiles>\\\\n  <activeProfiles>\\\\n    <activeProfile>nexus</activeProfile>\\\\n  </activeProfiles>\\\\n</settings>\\\\n\\\\\\" > ~/.m2/settings.tmpl.xml\\",
        \\"envsubst < ~/.m2/settings.tmpl.xml > ~/.m2/settings.xml\\",
        \\"export ROLLBACK_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:2.1.1:evaluate -Dexpression=project.version | sed -n -e '/^\\\\\\\\[.*\\\\\\\\]/ !{ /^[0-9]/ { p; q } }')\\",
        \\"echo \\\\\\"Resolved current version $ROLLBACK_VERSION\\\\\\"\\",
        \\"echo $ROLLBACK_VERSION > ROLLBACK_VERSION\\",
        \\"mvn -f ",
                Object {
                  "Ref": "pomFile",
                },
                " build-helper:parse-version versions:set -DnewVersion='\${parsedVersion.majorVersion}.\${parsedVersion.nextMinorVersion}.'0 versions:commit\\",
        \\"mvn clean install\\",
        \\"export VERSION=\`grep -oP 'version=\\\\\\\\K.*' ",
                Object {
                  "Ref": "propertiesFile",
                },
                "\`\\",
        \\"echo \\\\\\"Resolved new version $VERSION\\\\\\"\\",
        \\"echo $VERSION > VERSION\\",
        \\"cp ",
                Object {
                  "Ref": "propertiesFile",
                },
                " docker/files\\",
        \\"mvn deploy\\",
        \\"aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 23456789111.dkr.ecr.eu-west-1.amazonaws.com\\",
        \\"docker build -t 23456789111.dkr.ecr.eu-west-1.amazonaws.com/pfm-service:$VERSION-SNAPSHOT .\\",
        \\"docker push 23456789111.dkr.ecr.eu-west-1.amazonaws.com/pfm-service:$VERSION-SNAPSHOT\\"
      ]
    }
  },
  \\"artifacts\\": {
    \\"files\\": [
      \\"VERSION\\",
      \\"ROLLBACK_VERSION\\",
      \\"",
                Object {
                  "Ref": "propertiesFile",
                },
                "\\"
    ]
  },
  \\"cache\\": {
    \\"paths\\": [
      \\"/root/.m2/**/*\\"
    ]
  }
}",
              ],
            ],
          },
          "Type": "CODEPIPELINE",
        },
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "PfmServiceMavenDockerCodeBuildProjectSecurityGroup0AAAA536",
                "GroupId",
              ],
            },
          ],
          "Subnets": Array [
            "p-12345",
            "p-67890",
          ],
          "VpcId": "vpc-12345",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "PfmServiceMavenDockerCodeBuildProjectPolicyDocument63658B0B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:CreateNetworkInterface",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DeleteNetworkInterface",
                "ec2:DescribeSubnets",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeVpcs",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PfmServiceMavenDockerCodeBuildProjectPolicyDocument63658B0B",
        "Roles": Array [
          Object {
            "Ref": "pfmserviceMavenDockerBuildRole12444B07",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PfmServiceMavenDockerCodeBuildProjectSecurityGroup0AAAA536": Object {
      "Properties": Object {
        "GroupDescription": "Automatic generated security group for CodeBuild PfmServicePfmServiceMavenDockerCodeBuildProjectE3EC8B60",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": "vpc-12345",
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "PfmServiceMavenReleaseCodeBuildProjectF8C52ACA": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:3.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              "pfm-service-",
              Object {
                "Ref": "branch",
              },
              "-release",
            ],
          ],
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "PfmServiceMavenReleaseCodeBuildProjectRoleF47C81A2",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": Object {
            "Fn::Join": Array [
              "",
              Array [
                "{
  \\"version\\": \\"0.2\\",
  \\"env\\": {
    \\"secrets-manager\\": {
      \\"GITHUB_AUTH_TOKEN\\": \\"github-mmi-holdings-ces-token\\"
    }
  },
  \\"phases\\": {
    \\"install\\": {},
    \\"build\\": {
      \\"commands\\": [
        \\"env\\",
        \\"ls -al\\",
        \\"git clone https://$GITHUB_AUTH_TOKEN@github.com/",
                Object {
                  "Ref": "githubOrg",
                },
                "/pfm-service.git .repo\\",
        \\"cd .repo\\",
        \\"git fetch --tags\\",
        \\"git checkout ",
                Object {
                  "Ref": "branch",
                },
                "\\",
        \\"git reset --hard \\\\\\"$CODEBUILD_RESOLVED_SOURCE_VERSION\\\\\\"\\",
        \\"cd ..\\",
        \\"mv .repo/.git .\\",
        \\"rm -rf .repo\\",
        \\"git status\\",
        \\"export VERSION=$(cat $CODEBUILD_SRC_DIR_Artifact_Build_Docker_Build/VERSION)\\",
        \\"echo resolved version $VERSION\\",
        \\"mvn -f ",
                Object {
                  "Ref": "pomFile",
                },
                " build-helper:parse-version versions:set -DnewVersion=$VERSION versions:commit\\",
        \\"git status\\",
        \\"git config user.email \\\\\\"cesadmins@mmiholdings.co.za\\\\\\"\\",
        \\"git config user.name \\\\\\"multiply-service\\\\\\"\\",
        \\"git add *pom.xml **/pom.xml\\",
        \\"git commit -m \\\\\\"Version update for Release v$VERSION\\\\\\"\\",
        \\"git tag -a \\\\\\"$VERSION\\\\\\" -m \\\\\\"Publish tag for version v$VERSION\\\\\\"\\",
        \\"git push https://$GITHUB_AUTH_TOKEN@github.com/",
                Object {
                  "Ref": "githubOrg",
                },
                "/pfm-service.git --all\\",
        \\"git push https://$GITHUB_AUTH_TOKEN@github.com/",
                Object {
                  "Ref": "githubOrg",
                },
                "/pfm-service.git --tags\\",
        \\"aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 23456789111.dkr.ecr.eu-west-1.amazonaws.com\\",
        \\"docker pull 23456789111.dkr.ecr.eu-west-1.amazonaws.com/pfm-service:$VERSION-SNAPSHOT\\",
        \\"docker tag 23456789111.dkr.ecr.eu-west-1.amazonaws.com/pfm-service:$VERSION-SNAPSHOT 23456789111.dkr.ecr.eu-west-1.amazonaws.com/pfm-service:$VERSION\\",
        \\"docker push 23456789111.dkr.ecr.eu-west-1.amazonaws.com/pfm-service:$VERSION\\"
      ]
    }
  }
}",
              ],
            ],
          },
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "PfmServiceMavenReleaseCodeBuildProjectRoleDefaultPolicy530E4B66": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:GetAuthorizationToken",
                "secretsmanager:ListSecrets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "secretsmanager:GetResourcePolicy",
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
                "secretsmanager:ListSecretVersionIds",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:secretsmanager:af-south-1:23456789111:secret:github-mmi-holdings-ces-token-*",
            },
            Object {
              "Action": Array [
                "ecr:BatchGetImage",
                "ecr:BatchCheckLayerAvailability",
                "ecr:CompleteLayerUpload",
                "ecr:InitiateLayerUpload",
                "ecr:GetDownloadUrlForLayer",
                "ecr:PutImage",
                "ecr:UploadLayerPart",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:ecr:eu-west-1:23456789111:repository/pfm-service",
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:af-south-1:23456789111:log-group:/aws/codebuild/",
                      Object {
                        "Ref": "PfmServiceMavenReleaseCodeBuildProjectF8C52ACA",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:af-south-1:23456789111:log-group:/aws/codebuild/",
                      Object {
                        "Ref": "PfmServiceMavenReleaseCodeBuildProjectF8C52ACA",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:af-south-1:23456789111:report-group/",
                    Object {
                      "Ref": "PfmServiceMavenReleaseCodeBuildProjectF8C52ACA",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ArtifactsBucket2AAC5544",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "ArtifactsBucket2AAC5544",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PfmServiceMavenReleaseCodeBuildProjectRoleDefaultPolicy530E4B66",
        "Roles": Array [
          Object {
            "Ref": "PfmServiceMavenReleaseCodeBuildProjectRoleF47C81A2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PfmServiceMavenReleaseCodeBuildProjectRoleF47C81A2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "pfm-service-",
              Object {
                "Ref": "branch",
              },
              "-release",
            ],
          ],
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PfmServicePipeline8BC7E9B0": Object {
      "DependsOn": Array [
        "PfmServicePipelineRoleDefaultPolicy5ED3348A",
        "PfmServicePipelineRoleEB6A1491",
      ],
      "Properties": Object {
        "ArtifactStore": Object {
          "Location": Object {
            "Ref": "ArtifactsBucket2AAC5544",
          },
          "Type": "S3",
        },
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              "pfm-service-",
              Object {
                "Ref": "branch",
              },
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "PfmServicePipelineRoleEB6A1491",
            "Arn",
          ],
        },
        "Stages": Array [
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Provider": "GitHub",
                  "Version": "1",
                },
                "Configuration": Object {
                  "Branch": Object {
                    "Ref": "branch",
                  },
                  "OAuthToken": "{{resolve:secretsmanager:github-mmi-holdings-ces-token:SecretString:::}}",
                  "Owner": Object {
                    "Ref": "githubOrg",
                  },
                  "PollForSourceChanges": false,
                  "Repo": "pfm-service",
                },
                "Name": "Github_Source",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "Artifact_Source_Github_Source",
                  },
                ],
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Approval",
                  "Owner": "AWS",
                  "Provider": "Manual",
                  "Version": "1",
                },
                "Name": "Approve",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "PfmServicePipelineApproveBuildApproveCodePipelineActionRoleEB826E78",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Approve_Build",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ProjectName": Object {
                    "Ref": "PfmServiceMavenDockerCodeBuildProjectFBEEFCC2",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Artifact_Source_Github_Source",
                  },
                ],
                "Name": "Docker_Build",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "Artifact_Build_Docker_Build",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "PfmServicePipelineBuildDockerBuildCodePipelineActionRole01262C29",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Build",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "PrimarySource": "Artifact_Source_Github_Source",
                  "ProjectName": Object {
                    "Ref": "PfmServiceMavenReleaseCodeBuildProjectF8C52ACA",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Artifact_Source_Github_Source",
                  },
                  Object {
                    "Name": "Artifact_Build_Docker_Build",
                  },
                ],
                "Name": "Version_Publish",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "PfmServicePipelinePublishVersionPublishCodePipelineActionRoleB4B9EA3A",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Publish",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "PrimarySource": "Artifact_Source_Github_Source",
                  "ProjectName": Object {
                    "Ref": "PfmServiceDeploydevCodeBuildProjectC0D2A586",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Artifact_Source_Github_Source",
                  },
                  Object {
                    "Name": "Artifact_Build_Docker_Build",
                  },
                ],
                "Name": "K8s_Deploy",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "Artifact_Deploy_Dev_K8s_Deploy",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "PfmServicePipelineDeployDevK8sDeployCodePipelineActionRole56F6E9E7",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Deploy_Dev",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Approval",
                  "Owner": "AWS",
                  "Provider": "Manual",
                  "Version": "1",
                },
                "Name": "Approve",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "PfmServicePipelineApproveDeployPreApproveCodePipelineActionRole2F0EDFE7",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Approve_Deploy_Pre",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "PrimarySource": "Artifact_Source_Github_Source",
                  "ProjectName": Object {
                    "Ref": "PfmServiceDeploypreprodCodeBuildProject1F9A10DE",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Artifact_Source_Github_Source",
                  },
                  Object {
                    "Name": "Artifact_Build_Docker_Build",
                  },
                ],
                "Name": "K8s_Deploy",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "Artifact_Deploy_PRE_K8s_Deploy",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "PfmServicePipelineDeployPREK8sDeployCodePipelineActionRole4067260F",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Deploy_PRE",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "PfmServicePipelineApproveBuildApproveCodePipelineActionRoleEB826E78": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::23456789111:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PfmServicePipelineApproveDeployPreApproveCodePipelineActionRole2F0EDFE7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::23456789111:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PfmServicePipelineBuildDockerBuildCodePipelineActionRole01262C29": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::23456789111:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PfmServicePipelineBuildDockerBuildCodePipelineActionRoleDefaultPolicy2DC8D55B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PfmServiceMavenDockerCodeBuildProjectFBEEFCC2",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PfmServicePipelineBuildDockerBuildCodePipelineActionRoleDefaultPolicy2DC8D55B",
        "Roles": Array [
          Object {
            "Ref": "PfmServicePipelineBuildDockerBuildCodePipelineActionRole01262C29",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PfmServicePipelineDeployDevK8sDeployCodePipelineActionRole56F6E9E7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::23456789111:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PfmServicePipelineDeployDevK8sDeployCodePipelineActionRoleDefaultPolicy58D4F475": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PfmServiceDeploydevCodeBuildProjectC0D2A586",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PfmServicePipelineDeployDevK8sDeployCodePipelineActionRoleDefaultPolicy58D4F475",
        "Roles": Array [
          Object {
            "Ref": "PfmServicePipelineDeployDevK8sDeployCodePipelineActionRole56F6E9E7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PfmServicePipelineDeployPREK8sDeployCodePipelineActionRole4067260F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::23456789111:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PfmServicePipelineDeployPREK8sDeployCodePipelineActionRoleDefaultPolicy9B05A80E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PfmServiceDeploypreprodCodeBuildProject1F9A10DE",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PfmServicePipelineDeployPREK8sDeployCodePipelineActionRoleDefaultPolicy9B05A80E",
        "Roles": Array [
          Object {
            "Ref": "PfmServicePipelineDeployPREK8sDeployCodePipelineActionRole4067260F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PfmServicePipelinePublishVersionPublishCodePipelineActionRoleB4B9EA3A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::23456789111:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PfmServicePipelinePublishVersionPublishCodePipelineActionRoleDefaultPolicy2C38F186": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PfmServiceMavenReleaseCodeBuildProjectF8C52ACA",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PfmServicePipelinePublishVersionPublishCodePipelineActionRoleDefaultPolicy2C38F186",
        "Roles": Array [
          Object {
            "Ref": "PfmServicePipelinePublishVersionPublishCodePipelineActionRoleB4B9EA3A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PfmServicePipelineRoleDefaultPolicy5ED3348A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ArtifactsBucket2AAC5544",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "ArtifactsBucket2AAC5544",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PfmServicePipelineApproveBuildApproveCodePipelineActionRoleEB826E78",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PfmServicePipelineBuildDockerBuildCodePipelineActionRole01262C29",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PfmServicePipelinePublishVersionPublishCodePipelineActionRoleB4B9EA3A",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PfmServicePipelineDeployDevK8sDeployCodePipelineActionRole56F6E9E7",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PfmServicePipelineApproveDeployPreApproveCodePipelineActionRole2F0EDFE7",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PfmServicePipelineDeployPREK8sDeployCodePipelineActionRole4067260F",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PfmServicePipelineRoleDefaultPolicy5ED3348A",
        "Roles": Array [
          Object {
            "Ref": "PfmServicePipelineRoleEB6A1491",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PfmServicePipelineRoleEB6A1491": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PfmServicePipelineSourceGithubSourceWebhookResource6916ABDA": Object {
      "Properties": Object {
        "Authentication": "GITHUB_HMAC",
        "AuthenticationConfiguration": Object {
          "SecretToken": "{{resolve:secretsmanager:github-mmi-holdings-ces-token:SecretString:::}}",
        },
        "Filters": Array [
          Object {
            "JsonPath": "$.ref",
            "MatchEquals": "refs/heads/{Branch}",
          },
        ],
        "RegisterWithThirdParty": true,
        "TargetAction": "Github_Source",
        "TargetPipeline": Object {
          "Ref": "PfmServicePipeline8BC7E9B0",
        },
        "TargetPipelineVersion": 1,
      },
      "Type": "AWS::CodePipeline::Webhook",
    },
    "pfmserviceMavenDockerBuildRole12444B07": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "pfmserviceMavenDockerBuildRoleDefaultPolicy6010124D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchGetImage",
                "ecr:BatchCheckLayerAvailability",
                "ecr:CompleteLayerUpload",
                "ecr:InitiateLayerUpload",
                "ecr:GetDownloadUrlForLayer",
                "ecr:PutImage",
                "ecr:UploadLayerPart",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:ecr:eu-west-1:23456789111:repository/pfm-service",
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "ssm:GetParameter",
                "ssm:GetParameters",
                "ssm:GetParametersByPath",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": Array [
                "arn:aws:ssm:af-south-1:23456789111:parameter/mmi/nexus/username",
                "arn:aws:ssm:af-south-1:23456789111:parameter/mmi/nexus/password",
                "arn:aws:kms:af-south-1:23456789111:key/*",
              ],
            },
            Object {
              "Action": "ec2:CreateNetworkInterfacePermission",
              "Condition": Object {
                "StringEquals": Object {
                  "ec2:AuthorizedService": "codebuild.amazonaws.com",
                  "ec2:Subnet": Array [
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          Object {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":subnet/p-12345",
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          Object {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":subnet/p-67890",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ec2:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":network-interface/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:af-south-1:23456789111:log-group:/aws/codebuild/",
                      Object {
                        "Ref": "PfmServiceMavenDockerCodeBuildProjectFBEEFCC2",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:af-south-1:23456789111:log-group:/aws/codebuild/",
                      Object {
                        "Ref": "PfmServiceMavenDockerCodeBuildProjectFBEEFCC2",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:af-south-1:23456789111:report-group/",
                    Object {
                      "Ref": "PfmServiceMavenDockerCodeBuildProjectFBEEFCC2",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ArtifactsBucket2AAC5544",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "ArtifactsBucket2AAC5544",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "pfmserviceMavenDockerBuildRoleDefaultPolicy6010124D",
        "Roles": Array [
          Object {
            "Ref": "pfmserviceMavenDockerBuildRole12444B07",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
